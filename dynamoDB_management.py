import datetime
import boto3
import os
from dotenv import load_dotenv

load_dotenv()

# Load AWS credentials from environment variables
aws_access_key_id = os.environ.get('AWS_ACCESS_KEY_ID')
aws_secret_access_key = os.environ.get('AWS_SECRET_ACCESS_KEY')
aws_region = os.environ.get('AWS_DEFAULT_REGION')

# Initialize a DynamoDB client with explicit credentials
dynamodb = boto3.resource('dynamodb',
    aws_access_key_id=aws_access_key_id,
    aws_secret_access_key=aws_secret_access_key,
    region_name=aws_region
)

# Specify your table name
table_name = 'aivideos'

# Get a reference to the table
table = dynamodb.Table(table_name)

def add_to_dynamodb(video_details):
    item = {
        'name': video_details['name'],
        'product': video_details['product'],
        's3_url': video_details['s3_url'],
        'title': video_details['title'],
        'hashtags': video_details['hashtags'],
        'description': video_details['description'],
        'date_time': datetime.datetime.now().isoformat()
        
    }
    
    response = table.put_item(Item=item)
    return response



def update_dynamodb_item(name, product, account_id, platform, success, link):    
    try:
        response = table.update_item(
            Key={'name': name,
                'product': product,
                },
            UpdateExpression=f"set {platform}_link = :l, {platform}_id = :id, {platform}_success = :s, date_time = :dt",
            ExpressionAttributeValues={
                ':s': success,
                ':l': link,
                ':id': account_id,
                ':dt': datetime.datetime.now().isoformat()
            },
            ReturnValues="UPDATED_NEW"
        )
        print("DynamoDB update successful")
    except Exception as e:
        print(f"DynamoDB update failed: {str(e)}")
    
    return response



if __name__ == "__main__":
    # Test data
    test_video_details = {
        'name': 'test_video_001',
        'product': 'sample_product',
        's3_url': 'https://s3-bucket-name.s3.amazonaws.com/test_video_001.mp4',
        'title': 'Sample AI Generated Video',
        'hashtags': '#AIVideo #TestVideo #SampleProduct',
        'description': 'This is a test video generated by AI for the sample product.'
    }

    # Run the test
    try:
        # response = add_to_dynamodb(test_video_details)
        # print(f"Item added successfully. Response: {response}")
        
        # # Verify the item was added by trying to get it
        # get_response = table.get_item(Key={'name': test_video_details['name'], 'product': test_video_details['product']})
        # if 'Item' in get_response:
        #     print("Item verification successful. Item details:")
        #     print(get_response['Item'])
        # else:
        #     print("Item verification failed. Item not found in the table.")
        
        response = update_dynamodb_item(test_video_details['name'], test_video_details['product'], 'thisistestacc', 'tiktok', True, 'testlink.co')
    except Exception as e:
        print(f"An error occurred: {str(e)}")